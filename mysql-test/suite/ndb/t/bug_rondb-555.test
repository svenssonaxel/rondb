-- source include/have_ndb.inc
-- source suite/ndb/include/backup_restore_setup.inc

--echo Create table t1 with a unique index, and table t2 without.
use test;

create table t1 (
  id int primary key,
  val1 int unique) engine=ndb;

create table t2 (
  id int primary key,
  val1 int) engine=ndb;

insert into t1 values
        (1, 6),
        (3, 4),
        (2, 5);

insert into t2 values
        (8, 11),
        (7, 12),
        (9, 10);

# Save table definitions and data to temporary text files, to be used for comparisons
--let $t1m= $MYSQL_TMP_DIR/t1m.sql
--output $t1m
show create table t1;
--let $t1d= $MYSQL_TMP_DIR/t1d.txt
--output $t1d
select * from t1 order by id;
--let $t2m= $MYSQL_TMP_DIR/t2m.sql
--output $t2m
show create table t2;
--let $t2d= $MYSQL_TMP_DIR/t2d.txt
--output $t2d
select * from t2 order by id;

# Temporary files to compare to
--let $t1m_compare= $MYSQL_TMP_DIR/t1m_compare.sql
--let $t1d_compare= $MYSQL_TMP_DIR/t1d_compare.txt
--let $t2m_compare= $MYSQL_TMP_DIR/t2m_compare.sql
--let $t2d_compare= $MYSQL_TMP_DIR/t2d_compare.txt

--echo Original database
--cat_file $t1m
--cat_file $t1d
--cat_file $t2m
--cat_file $t2d

--echo Backing up data
--source include/ndb_backup.inc
disable_query_log; drop table t1; drop table t2; enable_query_log;

--let $restore= $NDB_RESTORE -b $the_backup_id
--let $backup= $NDB_BACKUPS-$the_backup_id
--let $trash= $NDB_TOOLS_OUTPUT
--let $t2_only= 0

# Test cases

--let $restorelog= /home/user/prog/RONDB-615/build/ndbrestore.log
--echo Single-invocation per node
--exec $restore -n 1 -m --disable-indexes -r                   $backup >> $restorelog
--exec $restore -n 2                      -r --rebuild-indexes $backup >> $restorelog
--source bug_rondb-555_helper.inc

# RISE backup

--let $the_backup_id= 2408146
--let $restore= $NDB_RESTORE -b $the_backup_id
--let $backup= /home/user/notes/RONDB-615/hops_hopsworks_24-02-19_08-47.backup_2408146/BACKUP/BACKUP-2408146
--let $riserestorelog= /home/user/prog/RONDB-615/build/riserestore.log

--exec $restore -n 2 --restore-meta  --disable-indexes      $backup > $riserestorelog #  --no-restore-disk-objects

--let $desc= $NDB_DESC -d hopsworks ts_1 ts_1_data_file_1.dat ts_1_data_file_0.dat lg_1 undo_log_0.log undo_2023_04_14_12_14.log dataset uq_dataset 'uq_dataset$unique' 'uq_dataset\$unique' git_repositories repository_inode_constraint_unique hdfs_command_execution uq_src_inode project inode_pid python_dep dependency
--exec $desc >> $riserestorelog

--exec $restore -n 1 --restore-data  --allow-unique-indexes $backup >> $riserestorelog
--exec $restore -n 2 --restore-data  --allow-unique-indexes $backup >> $riserestorelog
--exec $restore -n 1 --restore-epoch                        $backup >> $riserestorelog
# 2024-02-20 14:45:40 Failed to create foreign key FK_149_435 parent hops.hdfs_inodes.PK child hopsworks.dataset.uq_dataset$unique : 21033: Create foreign key failed in NDB - No parent row found
# CONSTRAINT `FK_149_435` FOREIGN KEY (`inode_pid`, `inode_name`, `partition_id`) REFERENCES `hops`.`hdfs_inodes` (`parent_id`, `name`, `partition_id`) ON DELETE CASCADE,

--output /home/user/prog/RONDB-615/build/out1.txt
select inode_pid, inode_name, partition_id from hopsworks.dataset;
--output /home/user/prog/RONDB-615/build/out2.txt
select parent_id, name, partition_id from hops.hdfs_inodes;
--output /home/user/prog/RONDB-615/build/out3.txt
select inode_pid, inode_name, partition_id from hopsworks.dataset where (inode_pid, inode_name, partition_id) not in (select parent_id, name, partition_id from hops.hdfs_inodes);

# Rebuild indexes only, not foreign keys
--exec $restore -n 2 --rebuild-indexes                        $backup >> $riserestorelog

--output /home/user/prog/RONDB-615/build/out-tbl-dataset.txt
select * from hopsworks.dataset;
--output /home/user/prog/RONDB-615/build/out-tbl-git_repositories.txt
select * from hopsworks.git_repositories;
--output /home/user/prog/RONDB-615/build/out-tbl-hdfs_command_execution.txt
select * from hopsworks.hdfs_command_execution;
--output /home/user/prog/RONDB-615/build/out-tbl-project.txt
select * from hopsworks.project;
--output /home/user/prog/RONDB-615/build/out-tbl-python_dep.txt
select * from hopsworks.python_dep;

# select inode_pid, inode_name, partition_id from hopsworks.git_repositories where inode_pid=1378 and inode_name='stardist' and partition_id=1378;
# select src_inode_pid, src_inode_name, src_inode_partition_id from hopsworks.hdfs_command_execution where src_inode_pid=425 and src_inode_name='data.zip' and src_inode_partition_id=425;
# select inode_pid, inode_name, partition_id from hopsworks.project where inode_pid=157 and inode_name='Vedanalys' and partition_id=157;



--exec $desc >> $riserestorelog

--output /home/user/prog/RONDB-615/build/out1b.txt
select inode_pid, inode_name, partition_id from hopsworks.dataset;
--output /home/user/prog/RONDB-615/build/out2b.txt
select parent_id, name, partition_id from hops.hdfs_inodes;
--output /home/user/prog/RONDB-615/build/out3b.txt
select inode_pid, inode_name, partition_id from hopsworks.dataset where (inode_pid, inode_name, partition_id) not in (select parent_id, name, partition_id from hops.hdfs_inodes);
--output /home/user/prog/RONDB-615/build/out5.txt
select parent_id, name, partition_id from hops.hdfs_inodes where parent_id=21 and name='numpy' and partition_id=21;
#--output /home/user/prog/RONDB-615/build/out4.txt
#select inode_pid, inode_name, partition_id from hopsworks.dataset where inode_pid=129 and inode_name='hello2.db' and partition_id=129;

# Rebuild foreign keys only, not indexes
--exec $restore -n 2 --rebuild-indexes --rebuild-fk           $backup >> $riserestorelog

# Cleanup

drop database airflow;
drop database antrise2;
drop database antrise3;
drop database glassfish_timers;
drop database h2obrist;
drop database hello2;
drop database hopsworks;
drop database hops;
drop database metastore;

#drop tablespace ts_1;
#drop logfile group lg_1 engine ndb;

#drop tablespace

#DROP TABLE hdfs.hdfs_ondisk_small_file_inode_data
#DROP TABLE hdfs.hdfs_ondisk_medium_file_inode_data
#DROP TABLE hdfs.hdfs_ondisk_large_file_inode_data
#DROP TABLE hopsworks.pki_crl



## -615/build/mysql-test/var/tmp/check-mysqld_1_1.reject  2024-02-20 17:13:27.189419549 +0300
## @@ -371,8 +371,13 @@
##  mysqlx_generate_document_id    char    function        NULL    1
##  mysqlx_get_prepared_statement_id       integer function        NULL    1
##  id     indented_name
## +14     lg_1
## +18       -> undo_2023_04_14_12_14.log
## +16       -> undo_log_0.log
##  3      sys/def/NDB$EVENTS_0
##  2      sys/def/SYSTAB_0
## +15     ts_1
## +17       -> ts_1_data_file_1.dat
##  VARIABLE_NAME  VARIABLE_VALUE
##  activate_all_roles_on_login    OFF
##  admin_address
## @@ -1124,8 +1129,11 @@
##  ./mtr/test_suppressions.ibd    TABLESPACE      mtr/test_suppressions   InnoDB
##  ./mysql.ibd    TABLESPACE      mysql   InnoDB
##  ./sys/sys_config.ibd   TABLESPACE      sys/sys_config  InnoDB
## +./ts_1_data_file_1.dat DATAFILE        ts_1    ndbcluster
##  ./undo_001     UNDO LOG        innodb_undo_001 InnoDB
##  ./undo_002     UNDO LOG        innodb_undo_002 InnoDB
## +./undo_2023_04_14_12_14.log    UNDO LOG        lg_1    ndbcluster
## +./undo_log_0.log       UNDO LOG        lg_1    ndbcluster
##  tables_in_test
##  tables_in_mysql
##  mysql.columns_priv

ALTER TABLESPACE ts_1 drop datafile 'ts_1_data_file_0.dat';
ALTER TABLESPACE ts_1 drop datafile 'ts_1_data_file_1.dat';
#ALTER logfile group lg_1 drop undofile 'undo_log_0.log' ENGINE ndbcluster;
#ALTER logfile group lg_1 drop undofile 'undo_2023_04_14_12_14.log' ENGINE ndbcluster;
DROP TABLESPACE ts_1;
DROP LOGFILE GROUP lg_1 ENGINE ndbcluster;

--remove_file $t1m
--remove_file $t1d
--remove_file $t2m
--remove_file $t2d
--remove_file $t1m_compare
--remove_file $t1d_compare
--remove_file $t2m_compare
--remove_file $t2d_compare
--remove_file $trash
--source suite/ndb/include/backup_restore_cleanup.inc
